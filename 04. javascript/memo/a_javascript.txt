자바스크립트 (JavaScript)
  객체가 존재하는 스크립트형 언어
  컴파일 과정 없이 브라우저 내부의 자바스크립트 처리기(인터프리터)에 의해 바로 실행됨
    컴파일러: 코드 전체를 실행
    인터프리터: 코드를 한 줄씩 실행
  * 개발이 발전됨에 따라 컴파일 과정이 가능해졌으며, Node.js로 서버 환경을 구축할 수 있다.
  
웹 페이지에서 자바스크립트의 역할
  웹 페이지는 3가지(HTML, CSS, JS)코드가 결합되어 작성
  자바스크립트는 사용자의 입력을 처리하거나 웹 애플리케이션을 작성하는 등 웹 페이지의 동적 제어에 사용됨
  - 사용자의 입력 및 연산
      키, 마우스 등의 입력과 연산은 오직 자바스크립트로만 처리가 가능하다.
    
  - 웹 페이지 내용 및 모양의 동적 제어
      HTML 태그의 속성이나 컨텐츠, CSS 속성 값을 변경해서 웹 페이지의 동적인 변화를 일으키는 데에 활용됨
      
  - 브라우저 제어
      브라우저 윈도우의 크기나 모양 변경, 새 윈도우나 탭 열기, 다른 웹사이트 접속, 브라우저의 히스토리 제어 등 브라우저의 작동을 제어하는데 활용됨
  
  - 웹 서버와의 통신
      웹 페이지가 웹 서버와 데이터를 주고 받을 때 활용
  
  - 웹 애플리케이션 작성
      자바스크립트 언어로 활용할 수 있는 많은 API를 제공하므로 웹 브라우저에서 실행되는 다양한 웹 애플리케이션 개발 가능
      
----------------------------------------------------------------------------

자바스크립트를 작성할 수 있는 위치
  1. HTML 태그의 이벤트 리스너 속성에 작성
     HTML 태그에는 마우스가 클릭되거나 키보드의 키가 입력되는 등의 이벤트(반응)가 발생할 때, 처리하는 코드를 등록하는 리스너 속성이 존재
      
  2. <script></script> 태그 안에서 작성
     <head></head>, <body></body>, body 태그 밖 등 어디든 들어갈 수 있음
     웹 페이지 내에서 여러 번 작성 가능
  
  3. .js 자바스크립트 파일에 작성
     자바스크립트 코드를 확장자가 .js인 별도의 파일로 저장하고, <script src=".js경로"></script>와 같이 가져옴
  
  4. URL 부분에 작성
     <a>태그의 href 속성에 자바스크립트 코드 작성 가능
     href 속성에서 자바스크립트 코드를 작성할 때 "javascript:"를 먼저 작성하고 뒤에 JS 코드를 작성
     
----------------------------------------------------------------------------

데이터 타입과 변수
  1. 자바스크립트 식별자(이름)
      식별자(identifier): 자바스크립트 개발자가 변수, 상수, 함수에 붙이는 이름
      식별자를 만들 때의 규칙
        - 첫번째 문자: 알파벳, 언더바, $
        - 두번째 이상 문자: 알파벳, 언더바, 0-9, $
        - 대소문자 구분: 각각 다른 식별자
        - 키워드(예약어) 사용 불가
        
  2. 문장 구분
      세미콜론;으로 문장과 문장을 구분
      한 줄에 한 문장만 있는 경우 세미콜론 생략 가능
      
  3. 주석
      1. 개발자와 소통하거나 코드에 대한 설명글을 작성할 때 사용
      2. 지금 당장 쓰지 않는 코드를 번역하지 않기 위해서
      
      //   : 한 줄 주석, ctrl + /
      /**/ : 범위 주석, ctrl + shift + /
      
  4. 데이터 타입(typeof)
      - 숫자 타입(number): 1, 2, 3.14
      - 논리 타입(bool): true, false
      - 문자열 타입(string): "string", 'string'
      - 객체 레퍼런스 타입(object): Object, Array, Math, Date
      - undefined: 타입이 정해지지 않은 것
      - null: 값이 정해지지 않은 것
      
  5. 변수
      - var 키워드: 함수의 영역만 영역으로 판단
      - let 키워드: 모든 영역을 영역으로 판단
      
  6. 지역변수와 전역변수
      변수의 사용 범위(scope)에 따라서 전역변수(global)와 지역변수(local)로 나뉨
      전역변수: 함수 밖에 선언된 변수
      지역변수: 영역 안에 선언된 변수
      
  7. 변수를 사용하는 이유
      1. 반복되는 값을 쉽게 관리하기 위해서
      2. 의미 없는 값을 하나의 정보로 만들기 위함(자료구조)
      
  8. 상수
      - const 키워드: 값을 변경시킬 수 없음
      - 대문자 사용
      
  9. 상수를 사용하는 이유
      값에 의미 부여를 하기 위함
      