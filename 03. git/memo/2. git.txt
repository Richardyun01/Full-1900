//리포지토리에 개인 파일들 연동
0-1. 폴더/파일 생성
0-2. 리포지토리 생성
1. git init
2. git add .
3. git commit -m "init"
4. git remote add origin (리포지토리 주소)
4-1. git remote
4-2. git remote -v
4-3. git status
5. git push origin master         //local branch와 서버 branch (master)를 동일하게 해야 함
5-1. 로그인 필요
6. 완료

Organization: 공용 서버
공용 서버에는 push하지 말 것 (팀장만 가능)

//공용 리포지토리에 파일들 연동
1. git remote add (리포지토리 이름) (리포지토리 주소)
1-1. git remote -v
2. git push (리포지토리 이름) master

Fork: 외부의 리포지토리를 개인의 것으로 가져옴
공용 저장소에 push할 수 없기 때문에 fork한 개인 리포지토리에 push하여 연동함

Pull: local로 가져옴

//팀장이 해야 할 일
1. 기본 환경 세팅
1-1. 새로운 폴더 생성
1-2. .gitignore 파일 생성 (visual studio code gitignore 내용 복사)
1-3. 새로운 문서 생성 및 수정
2. 워크스페이스 경로 확인
3. git init
4. git add .
5. git commit -m "init"
6. 새 Organization 생성
7. People->Invite로 멤버 초대
8. 새로운 public 리포지토리 생성
9. git remote add (리포지토리 이름) (리포지토리 주소)
10. git remote -v
11. git push (리포지토리 이름) master                   //리포지토리 생성 완료
12. Settings->Collaborator로 리포지토리에 멤버(Read) 초대
13. PR 들어오면 merge하기

//팀원이 할 일
1. Organization 및 리포지토리 초대 수락
2. 리포지토리에서 링크 복사 및 지정할 폴더 생성
3. git clone (원본 리포지토리 주소) .
4. git remote rename origin (변경할 이름)
5. git remote -v                                //명칭이 변경한 이름으로 바뀌어있어야 함
6. 리포지토리의 fork 받아오기                           //origin
7. git remote add origin (개인 리포지토리 주소)
8. git remote -v                                //기존 명칭과 origin 총 4개가 존재해야 함
9. 폴더 내 파일 수정
9-1. git checkout test                          //test가 없을 시 -b 붙임
9-2. git add .
9-3. git commit -m "메시지"
9-4. git checkout master
9-5. git merge test
9-6. git push origin master
9-7. PR 보내기
10. pull 지시 내려올 시
10-1. git pull (원본 리포지토리 이름) master
10-2. git checkout test                         //다시 test로 돌아감, test가 없을 시 -b 붙임